{"version":3,"sources":["components/Navbar.js","components/Newapp.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","style","color","href","title","type","id","onClick","toggleMode","htmlFor","toggleMode1","toggleMode2","Newapp","useState","text","useText","class","value","backgroundColor","caretColor","onChange","event","target","rows","newText","toUpperCase","Ailert","toLowerCase","nawaText","replaceAll","split","length","Alert","typ","role","msg","App","setMode","alert","setAlert","showAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b70e6411.chunk.js","sourcesContent":["import React from 'react'\r\n/*import { Link } from \"react-router-dom\";*/\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n<div className=\"container-fluid\" style={{color: props.mode==='dark'?'white':props.mode==='danger'?'white':props.mode==='primary'?'white':'black'}} >\r\n  {/*<Link className=\"navbar-brand\" style={{color: props.mode==='dark'?'white':props.mode==='danger'?'white':props.mode==='primary'?'white':'black'}} to=\"/\">{props.title}</Link>*/}\r\n  <a className=\"navbar-brand\" style={{color: props.mode==='dark'?'white':props.mode==='danger'?'white':props.mode==='primary'?'white':'black'}} href=\"/\">{props.title}</a>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n      <li className=\"nav-item\">\r\n        {/*<Link className=\"nav-link active\" style={{color: props.mode==='dark'?'white':props.mode==='danger'?'white':props.mode==='primary'?'white':'black'}} aria-current=\"page\" to=\"/\">Home</Link>*/}\r\n        <a className=\"nav-link active\" style={{color: props.mode==='dark'?'white':props.mode==='danger'?'white':props.mode==='primary'?'white':'black'}} aria-current=\"page\" href=\"/\">Home</a>\r\n      </li>\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n      <li className=\"nav-item\">\r\n        {/*<Link className=\"nav-link active\" style={{color: props.mode==='dark'?'white':props.mode==='danger'?'white':props.mode==='primary'?'white':'black'}} aria-current=\"page\" to=\"/About\">About</Link>*/}\r\n      </li>\r\n    </ul>\r\n    </ul>\r\n    <div className=\"form-check form-switch mx-2\">\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" style={{color: props.mode==='dark'?'white':'black'}}htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n<div className=\"form-check form-switch mx-2\">\r\n  <input className=\"form-check-input\" onClick={props.toggleMode1} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" style={{color: props.mode==='dark'?'white':'black'}} htmlFor=\"flexSwitchCheckDefault\">Enable Red Mode</label>\r\n</div>\r\n<div className=\"form-check form-switch\">\r\n  <input className=\"form-check-input\" onClick={props.toggleMode2} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" style={{color: props.mode==='dark'?'white':'black'}} htmlFor=\"flexSwitchCheckDefault\">Enable Blue Mode</label>\r\n</div>\r\n  </div>\r\n</div>\r\n</nav>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Newapp(props) {\r\n\r\n    const Caping = ()=>{\r\n        let newText = text.toUpperCase();\r\n        useText(newText);\r\n        props.Ailert(\"Text Has Been Capitalized\",\"success\")\r\n    }\r\n\r\n    const Lowering = ()=>{\r\n        let newText = text.toLowerCase();\r\n        useText(newText);\r\n        props.Ailert(\"Text Has Been Lowercased\",\"success\")\r\n    }\r\n\r\n    const Handlehtmltojsx = ()=>{\r\n        let newText = text.replaceAll(\"class\",\"className\");\r\n        let newiText = newText.replaceAll(\"for\",\"htmlFor\");\r\n        let nawaText = newiText.replaceAll(\"tabindex\",\"tabIndex\");\r\n        useText(nawaText);\r\n        props.Ailert(\"HTML Text Has Been Converted To JSX\",\"success\")\r\n\r\n    }\r\n\r\n    const ExcuteFunc = (event)=>{\r\n        useText(event.target.value);\r\n    }\r\n\r\n\r\n   const [text, useText] = useState('');\r\n    return (\r\n\r\n        <>\r\n        <div>\r\n            <h1>{props.title}</h1>\r\n            <div class=\"mb-3\">\r\n  <textarea class=\"form-control\" value={text} style={{color : props.mode==='dark'?'white':props.mode==='danger'?'white':props.mode==='primary'?'white':'black',backgroundColor : props.mode==='dark'?'grey':props.mode==='danger'?'red':props.mode==='primary'?'blue':'white',caretColor: 'green'}} onChange={ExcuteFunc} id=\"exampleFormControlTextarea1\" rows=\"8\"></textarea>\r\n</div>\r\n        </div>\r\n    <button className=\"btn btn-success my-2\" style={{backgroundColor: props.mode==='danger'?'#dc3545':props.mode==='primary'?'#0d6efd':'green'}} onClick={Caping}>Press To Capitalize!</button>\r\n    <button className=\"btn btn-success my-2 mx-1\" style={{backgroundColor: props.mode==='danger'?'#dc3545':props.mode==='primary'?'#0d6efd':'green'}} onClick={Lowering}>Press To Apply Lowercase Effect!</button>\r\n    <button className=\"btn btn-success my-2 mx-1\" style={{backgroundColor: props.mode==='danger'?'#dc3545':props.mode==='primary'?'#0d6efd':'green'}} onClick={Handlehtmltojsx}>Convert HTML To JSX</button>\r\n    <div className=\"container\" style={{color: props.mode==='dark'?'white':props.mode==='danger'?'white':props.mode==='primary'?'white':'black'}}>\r\n        <h3>Some Important Stats:</h3>\r\n        <p>{text===\"\"?0:text.split(\" \").length} Words And {text.length} Letters</p>\r\n        <p>{0.003*text.split(\" \").length} Minutes Read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text}</p>\r\n    </div>\r\n    </>\r\n    )\r\n}\r\nNewapp.propTypes = {\r\n    title: PropTypes.string\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n       props.Alert && <div>\r\n            <div class={`alert alert-${props.Alert.typ} alert-dismissible fade show`} role=\"alert\">\r\n  {props.Alert.msg}\r\n</div>\r\n        </div>\r\n    )\r\n}\r\n","import Navbar from './components/Navbar'\nimport Newapp from './components/Newapp'\nimport React, { useState } from 'react'\nimport Alert from './components/Alert'\n/*import About from './components/About'*/\n/*import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n*/\n\nfunction App() {\n  const [mode,setMode] = useState(\"light\");\n  const [alert,setAlert] = useState(null);\n\n  const showAlert =(message,type)=>{\n    setAlert({\n      msg : message,\n      typ : type,\n    })\n    setTimeout(()=>{\n     setAlert(null);\n    },1700)\n  }\n\n const Hacaton =()=>{\n    if(mode==='light'){\n    setMode('dark');\n    document.body.style.backgroundColor = \"Grey\";\n    showAlert(\"Dark Mode Has Been Enabled\",\"success\")\n    document.title ='TextUtils - Dark Mode'\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = \"White\";\n      showAlert(\"Light Mode Has Been Enabled\",\"success\")\n      document.title ='TextUtils - Home'\n    }\n  }\n\n  const Hacaton1 =()=>{\n    if(mode==='light'){\n    setMode('danger');\n    document.body.style.backgroundColor = \"red\";\n    showAlert(\"Red Mode Has Been Enabled\",\"success\")\n    document.title ='TextUtils - Red Mode'\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = \"White\";\n      showAlert(\"Light Mode Has Been Enabled\",\"success\")\n      document.title ='TextUtils - Home'\n    }\n  }\n\n  const Hacaton2 =()=>{\n    if(mode==='light'){\n    setMode('primary');\n    document.body.style.backgroundColor = \"blue\";\n    showAlert(\"Blue Mode Has Been Enabled\",\"success\")\n    document.title ='TextUtils - Blue Mode'\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = \"White\";\n      showAlert(\"Light Mode Has Been Enabled\",\"success\")\n      document.title ='TextUtils - Home'\n    }\n  }\n  \n  return (\n    <>\n    {/*<Router>*/}\n    <Navbar title=\"TextUtil\" mode={mode} toggleMode={Hacaton} toggleMode1={Hacaton1} toggleMode2={Hacaton2}/>\n    <Alert Alert={alert}/>\n    {/*<Switch>\n          <Route path=\"/About\">*/}\n           {/* <About />*/}\n          {/*</Route>*/}\n          {/*<Route path=\"/\">*/}\n          <div className=\"container\">\n      <Newapp mode={mode} Ailert={showAlert}/>\n    </div>\n          {/*</Route>\n        </Switch>\n          </Router>*/}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}